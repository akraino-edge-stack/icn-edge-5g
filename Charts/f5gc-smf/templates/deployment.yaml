apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: f5gc-smf
    sliceidx: 6d3d79da-f781-4cd9-813a-dbdad01e01c0
  annotations:
    free5gc.org/nssi-id: '27394d25-dbf5-428e-8fc3-f5b2add67115'
    free5gc.org/nsi-ids: '[
        { "id": "4e6db941-47d6-4fce-9c71-f7eb35a75d03" },
    ]'
    free5gc.org/supported-snssais: '[
        { "st": 1,
          "ssd": "010203",
        },
        { "st": 1,
          "ssd": "112233",
        },
    ]'
spec:
  #serviceName: "f5gc-smf"
  replicas: 1
  selector:
    matchLabels:
      app: f5gc-smf
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: f5gc-smf
        baseAppp: {{ .Values.baseApp }}
      #annotations:
      #  k8s.v1.cni.cncf.io/networks: '[{
      #      "name": "ovn-networkobj",
      #      "namespace": "default",
      #      "interface": "net4"
      #    }]'
          #k8s.plugin.opnfv.org/nfn-network: '{ "type": "ovn4nfv", "interface": [{ "name": "ovn-pfcp-net", "interface": "net1", "defaultGateway": "false" }]}'
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      nodeSelector:
{{ .Values.nodeSelector | toYaml | indent 8 }}
      hostname: {{ .Values.hostname }}
      subdomain: {{ .Values.subdomain }}
      initContainers:
      - name: init-myservice1
        image: busybox:1.31.1
        command: ['sh', '-c', "until wget -qO- $nrfUri &> /dev/null; do echo waiting for $nrfUri; sleep 2; done"]
        env:
        - name: nrfUri
          value: {{ .Values.configuration.nrfUri }}
      - name: init-myservice2
        image: busybox:1.31.1
        command: ['sh', '-c', "until ping -q -c 20 $UPFIP &> /dev/null; do echo waiting for upf: $UPFIP; sleep 2; done"]
        env:
        - name: UPFIP
          value: {{ .Values.userplane_information.up_nodes.UPF.node_id }}
      containers:
        - name: free5g-305-smf 
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["./smf"]
          args:
            - -smfcfg
            - ../config/smfcfg.conf
            - -uerouting
            - ../config/uerouting.yaml
          resources:
{{ .Values.resources | toYaml | indent 12 }}
          securityContext:
            privileged: false
          volumeMounts:
            - name: f5gc-smf-config
              mountPath: /free5gc/config
            - name: f5gc-smf-cert
              mountPath: /free5gc/support/TLS
          ports:
            - containerPort: {{ .Values.service.port }}
              name: if-sbi
              protocol: TCP
            - containerPort: 8805
              name: if-n4
              protocol: UDP
{{- if .Values.tcpdump.image }}
        - name: tcpdump
          image: {{ .Values.tcpdump.image }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sleep
            - infinity
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
{{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: f5gc-smf-sa
      terminationGracePeriodSeconds: 30
      volumes:
        - name: f5gc-smf-cert
          secret:
            secretName: f5gc-smf-tls-secret
        - name: f5gc-smf-config
          configMap:
            name: f5gc-smf-config
